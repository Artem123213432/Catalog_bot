from django.contrib import admin
from django.contrib import messages
from django.utils.html import format_html
from .models import Client, Order, Mailing, Product, OrderItem

class OrderItemInline(admin.TabularInline):
    model = OrderItem
    extra = 1

# Клиенты в основном меню
@admin.register(Client)
class ClientAdmin(admin.ModelAdmin):
    list_display = ('telegram_id', 'username', 'full_name', 'created_at')
    search_fields = ('telegram_id', 'username', 'full_name')
    list_filter = ('created_at',)

    class Meta:
        verbose_name = 'Клиент'
        verbose_name_plural = 'Таблица по всем клиентам'

# Заказы в подкатегории ORDERS
@admin.register(Order)
class OrderAdmin(admin.ModelAdmin):
    list_display = ('id', 'client', 'created_at', 'is_paid')
    list_filter = ('created_at', 'is_paid')
    search_fields = ('client__username', 'client__full_name', 'client__telegram_id')
    inlines = [OrderItemInline]

@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    list_display = ('name', 'price')
    search_fields = ('name',)

# Рассылки оставляем без изменений
@admin.register(Mailing)
class MailingAdmin(admin.ModelAdmin):
    list_display = ('id', 'created_at', 'sent', 'message_preview')
    list_filter = ('sent',)
    search_fields = ('message',)
    actions = ['run_mailing']

    def message_preview(self, obj):
        if len(obj.message) > 50:
            return obj.message[:50] + "..."
        return obj.message
    
    message_preview.short_description = "Текст сообщения"

    @admin.action(description='Запустить рассылку')
    def run_mailing(self, request, queryset):
        # Отбираем только те рассылки, которые еще не были отправлены
        unsent_mailings = queryset.filter(sent=False)
        count = unsent_mailings.count()
        
        if not count:
            self.message_user(request, "Нет неотправленных рассылок для запуска.", messages.WARNING)
            return
        
        # Ничего не делаем здесь с флагом sent. Бот сам его обновит после отправки.
        self.message_user(request, f'{count} рассылок будут запущены.', messages.SUCCESS)
